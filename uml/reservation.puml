@startuml

package com.acme.sales.model.booking {
    abstract class Reservation <<Value Object>> {
        + String : reservationReference
        + String : cancellationReference

        - String : providerId

        - String : contractCode

        # cancel()
        # reserve()
        # Reservation(ReservationTypes:, typ, String: providerId)
        # setupDates(Date: startDate, Date: endDate)
    }
    note  top of Reservation:"Represents the Reservation \n for different parts of package \n e.g., hotel, airline, cruise"
    note right of Reservation::"providerId"
            Identifies the reservation providerId
            E.g., Hotel such as "Marriot of Key west"
            Assigned by Product team
    end note
    note right of Reservation::"contractCode"
        All contracts have a code that are
        managed by the products team
    end note

    class AirlineReservation{}
    class HotelReservation {}
    class RentalCarReservation{}

    enum ReservationTypes {
        HOTEL,
        AIRLINE,
        CAR_RENTAL,
        CRUISE,
        RESORT
    }

    enum ReservationStatus {
        UNKNOWN,
        CONFIRMED,
        CANCELLED
    }
}



'Inheritance relationship
Reservation <|-- AirlineReservation
note "Concrete classes implement the \n reservtaion/cancellation behavior" as N2
AirlineReservation .. N2
Reservation <|-- HotelReservation
HotelReservation .. N2
Reservation <|-- RentalCarReservation
RentalCarReservation .. N2



Reservation -- ReservationTypes  : defines
Reservation -- ReservationStatus  : defines


title Reservation Class Hierarchy \n\n
footer \n Part of a course on Microservices \n Copyright @ 2021. For more info visit http://ACloudFan.com \n

@enduml