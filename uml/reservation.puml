@startuml

note "Represents the Reservation \n for different parts of package \n e.g., hotel, airline, cruise" as N1
abstract class Reservation <<Value Object>> {
    - String : providerId
    # cancel()
    # reserve()
    # Reservation(ReservationTypes:, typ, String: providerId)
    # setupDates(Date: startDate, Date: endDate)
}

N1 .. Reservation


enum ReservationTypes {
    HOTEL,
    AIRLINE,
    CAR_RENTAL,
    CRUISE,
    RESORT
}

enum ReservationStatus {
    UNKNOWN,
    CONFIRMED,
    CANCELLED
}

note "Concrete classes implement the \n reservtaion/cancellation behavior" as N2

'Inheritance relationship
Reservation <|-- AirlineReservation
AirlineReservation .. N2
Reservation <|-- HotelReservation
HotelReservation .. N2
Reservation <|-- RentalCarReservation
RentalCarReservation .. N2



Reservation -- ReservationTypes  : defines
Reservation -- ReservationStatus  : defines


title Reservation Classe Hierarchy \n\n
footer \n Part of a course on Microservices \n Copyright 2021. For more info visit http://ACloudFan.com \n

@enduml